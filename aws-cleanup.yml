---
- name: AWS Webserver Infrastructure
  hosts: localhost
  vars:
    vpc_name: "webserver-vpc"
    project_name: "ansible"
    region: "eu-west-1"
    cidr: "10.0.0.0/16"
    cidr_public_a: "10.0.1.0/24"
    cidr_public_b: "10.0.4.0/24"
    zone1: "a"
    zone2: "b"

  tasks:
  - name: Get ec2 facts
    ec2_instance_info:
      region: "{{ region }}"
      filters:
        "tag:Ansible": webserver
    register: ec2

  - name: Get VPC info
    ec2_vpc_net_info:
      region: "{{ region }}"
      filters:
         "tag:Name": "{{ vpc_name }}"
    register: vpc

  - name: Terminate ec2 instances
    ec2:
      state: 'absent'
      region: "{{ region }}"
      instance_ids: '{{ item }}'
    loop:
      - "{{ ec2['instances'][0].instance_id }}"
      - "{{ ec2['instances'][1].instance_id }}"

  - name: Get ELB DNS info
    elb_application_lb_info:
      names: "webserverelb"
      region: "{{ region }}"
    register: elb

  - name: Remove ELB
    elb_application_lb:
      name: "webserverelb"
      state: absent
      region: "{{ region }}"
      wait: yes
      wait_timeout: 600

  - name: Remove Route53 record
    route53:
      state: absent
      zone: "{{ domain }}"
      record: "{{ hostname }}.{{ domain }}"
      type: A
      value: "{{ elb.load_balancers[0].dns_name }}"
      alias: True
      alias_hosted_zone_id: "{{ elb.load_balancers[0].canonical_hosted_zone_id }}"

  - name: Remove ELB Target Group
    elb_target_group:
      name: webservers
      region: "{{ region }}"
      protocol: http
      port: 80
      vpc_id: "{{ vpc.vpcs[0].id }}"
      state: absent
      wait_timeout: 200

  - name: remove VPC
    ec2_vpc_net:
      name: "{{ vpc_name }}"
      cidr_block: "{{ cidr }}"
      region: "{{ region }}"
      state: absent

